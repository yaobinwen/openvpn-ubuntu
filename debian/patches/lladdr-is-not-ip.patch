Index: openvpn-2.1_rc11/options.c
===================================================================
--- openvpn-2.1_rc11.orig/options.c	2008-09-18 00:28:30.813005586 +0200
+++ openvpn-2.1_rc11/options.c	2008-09-18 00:29:16.041367039 +0200
@@ -3436,11 +3436,11 @@
   else if (streq (p[0], "lladdr") && p[1])
     {
       VERIFY_PERMISSION (OPT_P_UP);
-      if (ip_addr_dotted_quad_safe (p[1])) /* FQDN -- IP address only */
+      if (mac_addr_safe (p[1])) /* MAC address only */
 	options->lladdr = p[1];
       else
 	{
-	  msg (msglevel, "lladdr parm '%s' must be an IP address", p[1]);
+	  msg (msglevel, "lladdr parm '%s' must be an MAC address", p[1]);
 	  goto err;
 	}
     }
Index: openvpn-2.1_rc11/socket.c
===================================================================
--- openvpn-2.1_rc11.orig/socket.c	2008-09-18 00:28:36.304471508 +0200
+++ openvpn-2.1_rc11/socket.c	2008-09-18 00:29:16.044367597 +0200
@@ -294,6 +294,47 @@
   }
 }
 
+bool
+mac_addr_safe (const char *mac_addr)
+{
+  /* verify non-NULL */
+  if (!mac_addr)
+    return false;
+
+  /* verify length is within limits */
+  if (strlen (mac_addr) > 17)
+    return false;
+
+  /* verify that all chars are either alphanumeric or ':' and that no
+     alphanumeric substring is greater than 2 chars */
+  {
+    int nnum = 0;
+    const char *p = mac_addr;
+    int c;
+
+    while ((c = *p++))
+      {
+	if ( (c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') )
+	  {
+	    ++nnum;
+	    if (nnum > 2)
+	      return false;
+	  }
+	else if (c == ':')
+	  {
+	    nnum = 0;
+	  }
+	else
+	  return false;
+      }
+  }
+
+  /* error-checking is left to script invoked in lladdr.c */
+  return true;
+
+}
+
+
 static bool
 dns_addr_safe (const char *addr)
 {
Index: openvpn-2.1_rc11/socket.h
===================================================================
--- openvpn-2.1_rc11.orig/socket.h	2008-09-18 00:28:41.083135754 +0200
+++ openvpn-2.1_rc11/socket.h	2008-09-18 00:29:16.046367039 +0200
@@ -399,6 +399,7 @@
 
 /* integrity validation on pulled options */
 bool ip_addr_dotted_quad_safe (const char *dotted_quad);
+bool mac_addr_safe (const char *mac_addr);
 bool ip_or_dns_addr_safe (const char *addr, const bool allow_fqdn);
 
 socket_descriptor_t create_socket_tcp (void);
