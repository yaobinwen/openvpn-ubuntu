Index: openvpn-2.1.0/ssl.c
===================================================================
--- openvpn-2.1.0.orig/ssl.c	2010-04-10 16:54:33.444694726 +0200
+++ openvpn-2.1.0/ssl.c	2010-04-10 16:54:57.552723663 +0200
@@ -3752,7 +3752,8 @@
 	   && ks->n_packets >= session->opt->renegotiate_packets)
        || (packet_id_close_to_wrapping (&ks->packet_id.send))))
     {
-      msg (D_TLS_DEBUG_LOW, "TLS: soft reset sec=%d bytes=%d/%d pkts=%d/%d",
+      msg (D_TLS_DEBUG_LOW,
+           "TLS: soft reset sec=%d bytes=" counter_format "/%d pkts=" counter_format "/%d",
 	   (int)(ks->established + session->opt->renegotiate_seconds - now),
 	   ks->n_bytes, session->opt->renegotiate_bytes,
 	   ks->n_packets, session->opt->renegotiate_packets);
Index: openvpn-2.1.0/ssl.h
===================================================================
--- openvpn-2.1.0.orig/ssl.h	2010-04-10 16:54:35.812695474 +0200
+++ openvpn-2.1.0/ssl.h	2010-04-10 16:54:57.576727135 +0200
@@ -376,8 +376,8 @@
   struct reliable *rec_reliable;  /* order incoming ciphertext packets before we pass to TLS */
   struct reliable_ack *rec_ack;	  /* buffers all packet IDs we want to ACK back to sender */
 
-  int n_bytes;			 /* how many bytes sent/recvd since last key exchange */
-  int n_packets;		 /* how many packets sent/recvd since last key exchange */
+  counter_type n_bytes;		 /* how many bytes sent/recvd since last key exchange */
+  counter_type n_packets;	 /* how many packets sent/recvd since last key exchange */
 
   /*
    * If bad username/password, TLS connection will come up but 'authenticated' will be false.
